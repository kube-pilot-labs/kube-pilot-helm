apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with (mergeOverwrite (deepCopy .Values.global.deploymentAnnotations) .Values.server.deploymentAnnotations) }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  name: {{ include "kube-pilot.server.fullname" . }}
  namespace: {{ include  "kube-pilot.namespace" . }}
  labels:
    {{- include "kube-pilot.labels" (dict "context" . "name" .Values.server.name) | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      {{- include "kube-pilot.selectorLabels" (dict "context" . "name" .Values.server.name) | nindent 6 }}
  template:
    metadata:
      {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.server.podAnnotations) }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "kube-pilot.labels" (dict "context" . "name" .Values.server.name) | nindent 8 }}
    spec:
      {{- with .Values.server.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.server.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.server.terminationGracePeriodSeconds }}
      {{- end }}
      serviceAccountName: {{ include "kube-pilot.server.serviceAccountName" . }}
      containers:
        - name: {{ .Values.server.name }}
          {{- with .Values.server.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ default .Values.global.image.repository .Values.server.image.repository }}:{{ default (include "kube-pilot.defaultTag" .) .Values.server.image.tag }}
          imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.server.image.imagePullPolicy }}
          env:
            - name: KAFKA_BROKER
              value: {{ .Values.global.env.kafkaBroker }}
            - name: KAFKA_CREATE_DEPLOY_TOPIC
              value: {{ .Values.global.env.kafkaCreateDeployTopic }}
            - name: KAFKA_HEALTH_CHECK_TOPIC
              value: {{ .Values.global.env.kafkaHealthCheckTopic }}
          ports:
            - name: http
              containerPort: {{ .Values.server.containerPorts.http }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.server.livenessProbe.path | default "/ping" }}
              port: http
            initialDelaySeconds: {{ .Values.server.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.server.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.server.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.server.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.server.readinessProbe.path | default "/healthz" }}
              port: http
            initialDelaySeconds: {{ .Values.server.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.server.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.server.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.server.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          {{- with .Values.server.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 10 }}
          {{- end }}